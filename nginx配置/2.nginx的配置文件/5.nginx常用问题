1.设置访问密码

yum install httpd-tools
htpasswd -c /usr/local/nginx/passwd name

server {
   listen 80;
   server_name  localhost;
   .......
 
   #新增下面两行
   auth_basic "Please input password"; #这里是验证时的提示信息 
   auth_basic_user_file /usr/local/nginx/passwd;
   location /{
   .......
        }
}


2.设置php支持

       location ~ \.php$ {
            root           html;
            fastcgi_pass   127.0.0.1:9000;
            fastcgi_index  index.php;
            fastcgi_param  SCRIPT_FILENAME  $document_root$fastcgi_script_name;
            include        fastcgi_params;
        }

3.https配置
        ssl_certificate "/etc/letsencrypt/live/www.xxx.xyz/fullchain.pem";#证书文件
        ssl_certificate_key "/etc/letsencrypt/live/www.xxx.xyz/privkey.pem";#证书KEY文件
        ssl_session_cache shared:SSL:1m;
        ssl_session_timeout  10m;
        ssl_protocols TLSv1 TLSv1.1 TLSv1.2; #按照这个协议配置
        ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE; #按照这个套件配置
        ssl_prefer_server_ciphers on;

4.重写规则rewrite
server {
    rewrite 规则 定向路径 重写类型;
}
访问的文件和目录不存在时，重定向到某个php文件
if( !-e $request_filename )
{
	rewrite ^/(.*)$ index.php last;
}

目录对换 /123456/xxxx ====> /xxxx?id=123456
rewrite ^/(\d+)/(.+)/ /$2?id=$1 last;

禁止访问多个目录
location ~ ^/(cron|templates)/
{
	deny all;
	break;
}

禁止访问以/data开头的文件
location ~ ^/data
{
	deny all;
}

禁止访问以.sh,.flv,.mp3为文件后缀名的文件
location ~ .*\.(sh|flv|mp3)$
{
	return 403;
}

设置某些类型文件的浏览器缓存时间
location ~ .*\.(gif|jpg|jpeg|png|bmp|swf)$
{
	expires 30d;
}
location ~ .*\.(js|css)$
{
	expires 1h;
}

5.nginx不能通过ip访问
server 
{ 
    listen 80 default_server; 
    server_name _; 
    return 500; 
} 
或者
server { 
    listen 80 default_server; 
    server_name _; 
    rewrite ^(.*) http://www.xxx.com permanent; 
} 

6.负载均衡
upstream name{
   server ip:8080 weight=1;
   server ip:8081 weight=1;
}

server {
    
    location  ~*^.+$ {
    	proxy_pass http://name;
    }
}

7.nginx常用统计
PV(访问量)：即Page View, 即页面浏览量或点击量，用户每次刷新即被计算一次。
UV(独立访客)：即Unique Visitor,访问您网站的一台电脑客户端为一个访客。00:00-24:00内相同的客户端只被计算一次。
IP(独立IP)：即Internet Protocol,指独立IP数。00:00-24:00内相同IP地址之被计算一次。
1)IP相关统计
统计ip访问量
awk '{print $1}' access.log | sort -n | uniq | wc -l
访问前10的ip
awk '{print $1}' access.log | sort | uniq -c | sort -nr | head -n 10
查看某一时间段的IP访问量(4-5点)
grep "01/Sep/2019:0[4-5]" access.log | awk '{print $1}' | sort | uniq -c| sort -nr | wc -l
查看访问最频繁的前100个IP
awk '{print $1}' access.log | sort -n |uniq -c | sort -rn | head -n 100
查看访问100次以上的IP
awk '{print $1}' access.log | sort -n |uniq -c |awk '{if($1 >100) print $0}'|sort -rn
查询某个IP的详细访问情况,按访问频率排序
grep '104.217.108.66' access.log |awk '{print $7}'|sort |uniq -c |sort -rn |head -n 100
2)页面访问统计
查看访问最频的页面(TOP100)
awk '{print $7}' access.log | sort |uniq -c | sort -rn | head -n 100
查看访问最频的页面([排除php页面】(TOP100)
grep -v ".php"  access.log | awk '{print $7}' | sort |uniq -c | sort -rn | head -n 100
查看页面访问次数超过100次的页面
cat access.log | cut -d ' ' -f 7 | sort |uniq -c | awk '{if ($1 > 100) print $0}' | less
查看最近1000条记录，访问量最高的页面
tail -1000 access.log |awk '{print $7}'|sort|uniq -c|sort -nr|less

统计每秒的请求数,top100的时间点(精确到秒)
awk '{print $4}' access.log |cut -c 14-21|sort|uniq -c|sort -nr|head -n 100
统计每分钟的请求数,top100的时间点(精确到分钟)
awk '{print $4}' access.log |cut -c 14-18|sort|uniq -c|sort -nr|head -n 100
统计每小时的请求数,top100的时间点(精确到小时)
awk '{print $4}' access.log |cut -c 14-15|sort|uniq -c|sort -nr|head -n 100

3)性能分析
列出传输时间超过3秒的页面，显示前20条
cat access.log|awk '($NF > 3){print $7}'|sort -n|uniq -c|sort -nr|head -20
列出php页面请求时间超过3秒的页面，并统计其出现的次数，显示前100条
cat access.log|awk '($NF > 1 &&  $7~/\.php/){print $7}'|sort -n|uniq -c|sort -nr|head -100

4）蜘蛛抓取统计
统计蜘蛛抓取次数
grep 'Baiduspider' access.log |wc -l
统计蜘蛛抓取404的次数
grep 'Baiduspider' access.log |grep '404' | wc -l

5）TCP连接统计
查看当前TCP连接数
netstat -tan | grep "ESTABLISHED" | grep ":80" | wc -l
用tcpdump嗅探80端口的访问看看谁最高
tcpdump -i eth0 -tnn dst port 80 -c 1000 | awk -F"." '{print $1"."$2"."$3"."$4}' | sort | uniq -c | sort -nr

