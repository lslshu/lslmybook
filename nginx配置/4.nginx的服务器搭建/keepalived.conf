! Configuration File for keepalived

global_defs {
#用于设置报警邮件地址
   notification_email {
     acassen@firewall.loc
     failover@firewall.loc
     sysadmin@firewall.loc
   }
#用于设置邮件的发送地址
   notification_email_from Alexandre.Cassen@firewall.loc
#用于设置邮件的smtp server地址
   smtp_server 192.168.200.1
#设置连接smtp server 的超时时间
   smtp_connect_timeout 30
#表示运行keepalived服务器的一个标识
   router_id LVS_DEVEL
}
#VRRP实例开始的标识 
vrrp_instance VI_1 {
#用于指定keepalived的角色
    state MASTER
#指定HA监控网络的接口
    interface eth0
#虚拟路由标识
    virtual_router_id 51
#定义节点优先级，数字越大优先级越高
    priority 100
#用于设定master和backup之间同步检查时间间隔
    advert_int 1
#设定节点间通信验证类型和密码
    authentication {
        auth_type PASS
        auth_pass 1111
    }
#用于设置虚拟ip地址
    virtual_ipaddress {
        192.168.200.16
        192.168.200.17
        192.168.200.18
    }
}
#设置虚拟器开始的标识
virtual_server 192.168.200.100 443 {
#设置健康检查的时间间隔
    delay_loop 6
#设置负载调度算法[rr|wrr|lc|wlc|lblc|sh|dh]
    lb_algo rr
#设置lvs实现负载均衡的机制[nat|tun|dr]
    lb_kind NAT
    nat_mask 255.255.255.0
#回话保持时间
    persistence_timeout 50
#指定转发协议类型[tcp|udp]
    protocol TCP
#设置real_server的标识，真实ip和端口
    real_server 192.168.201.100 443 {
#设置real server节点的权值，越大权值越高
        weight 1
#健康监测段[http_get|ssl_get|tcp_check|smtp_check|misc_check]
        SSL_GET {
#指定http/ssl检查的url信息
            url {
#后跟详细的url路径
              path /
#ssl检查后的摘要信息
              digest ff20ad2481f97b1754ef3e12ecd3a9cc
            }
            url {
              path /mrtg/
              digest 9b3a0c85a887a256d6939da88aabd8cd
            }
            connect_timeout 3
            nb_get_retry 3
            delay_before_retry 3
        }
    }
}

virtual_server 10.10.10.2 1358 {
    delay_loop 6
    lb_algo rr 
    lb_kind NAT
    persistence_timeout 50
    protocol TCP

    sorry_server 192.168.200.200 1358

    real_server 192.168.200.2 1358 {
        weight 1
        HTTP_GET {
            url { 
              path /testurl/test.jsp
              digest 640205b7b0fc66c1ea91c463fac6334d
            }
            url { 
              path /testurl2/test.jsp
              digest 640205b7b0fc66c1ea91c463fac6334d
            }
            url { 
              path /testurl3/test.jsp
              digest 640205b7b0fc66c1ea91c463fac6334d
            }
            connect_timeout 3
            nb_get_retry 3
            delay_before_retry 3
        }
    }

    real_server 192.168.200.3 1358 {
        weight 1
        HTTP_GET {
            url { 
              path /testurl/test.jsp
              digest 640205b7b0fc66c1ea91c463fac6334c
            }
            url { 
              path /testurl2/test.jsp
              digest 640205b7b0fc66c1ea91c463fac6334c
            }
            connect_timeout 3
            nb_get_retry 3
            delay_before_retry 3
        }
    }
}

virtual_server 10.10.10.3 1358 {
    delay_loop 3
    lb_algo rr 
    lb_kind NAT
    nat_mask 255.255.255.0
    persistence_timeout 50
    protocol TCP

    real_server 192.168.200.4 1358 {
        weight 1
        HTTP_GET {
            url { 
              path /testurl/test.jsp
              digest 640205b7b0fc66c1ea91c463fac6334d
            }
            url { 
              path /testurl2/test.jsp
              digest 640205b7b0fc66c1ea91c463fac6334d
            }
            url { 
              path /testurl3/test.jsp
              digest 640205b7b0fc66c1ea91c463fac6334d
            }
            connect_timeout 3
            nb_get_retry 3
            delay_before_retry 3
        }
    }

    real_server 192.168.200.5 1358 {
        weight 1
        HTTP_GET {
            url { 
              path /testurl/test.jsp
              digest 640205b7b0fc66c1ea91c463fac6334d
            }
            url { 
              path /testurl2/test.jsp
              digest 640205b7b0fc66c1ea91c463fac6334d
            }
            url { 
              path /testurl3/test.jsp
              digest 640205b7b0fc66c1ea91c463fac6334d
            }
            connect_timeout 3
            nb_get_retry 3
            delay_before_retry 3
        }
    }
}
